services:
  postgres:
    image: pgvector/pgvector:pg15
    container_name: knowledge_platform_postgres
    environment:
      POSTGRES_DB: knowledge_platform
      POSTGRES_USER: knowledge_user
      POSTGRES_PASSWORD: knowledge_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - knowledge_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U knowledge_user -d knowledge_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5.15-community
    container_name: knowledge_platform_neo4j
    environment:
      NEO4J_AUTH: neo4j/knowledge_password
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*
      NEO4J_apoc_export_file_enabled: "true"
      NEO4J_apoc_import_file_enabled: "true"
      NEO4J_apoc_import_file_use__neo4j__config: "true"
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      - ./database/neo4j/init:/var/lib/neo4j/import
    networks:
      - knowledge_network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "cypher-shell",
          "-u",
          "neo4j",
          "-p",
          "knowledge_password",
          "RETURN 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:

networks:
  knowledge_network:
    driver: bridge
